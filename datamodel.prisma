type User {
  id: ID! @id
  firstname: String
  lastname: String
  email: String @unique
  password: String
  phone: String
  is_verified: Boolean @default(value: false)
  is_ban: Boolean @default(value: false)
  token: String
  create_at: DateTime @createdAt
  groups: [Group] @relation(name: "RelationGroupUser")
  groupsOwner: [Group] @relation(name: "RelationGroupOwner")
  roles: [Role]
  messages: [Message] @relation(name: "MessagesFromUser")
}

type Message {
  id: ID! @id
  create_at: DateTime! @createdAt
  updated_at: DateTime! @updatedAt
  text: String!
  sentBy: User  @relation(name: "MessagesFromUser")
  toGroup: Group! @relation(name: "MessagesToGroup")
}

type Role {
  id: ID! @id
  name: String!
  rights: [Right]
  group: Group
}

type Right{
  id: ID! @id
  name: String!
}

type Group {
  id: ID! @id
  owner: User @relation(name: "RelationGroupOwner")
  name: String!
  users: [User] @relation(name: "RelationGroupUser")
  messages: [Message] @relation(name: "MessagesToGroup")
}

type Blacklist{
  id: ID! @id
  ip: String
  end_time: DateTime
}

